[project]
name = "calendar-splitter"
version = "2.0.0"
description = "Split university course calendars into individual feeds"
readme = "README.md"
requires-python = ">=3.11"
dependencies = ["icalendar>=5.0.12", "requests>=2.31.0", "python-dotenv>=1.0.0"]

[project.optional-dependencies]
dev = [
  "pytest>=7.4.0",
  "pytest-cov>=4.1.0",
  "mypy>=1.5.0",
  "ruff>=0.1.0",
  "types-requests>=2.31.0",
]

[project.scripts]
calendar-splitter = "calendar_splitter.cli:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

# Ruff configuration - linting and formatting
[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = [
  "E",   # pycodestyle errors
  "W",   # pycodestyle warnings
  "F",   # pyflakes
  "I",   # isort
  "N",   # pep8-naming
  "UP",  # pyupgrade
  "ANN", # annotations
  "B",   # bugbear
  "A",   # builtins
  "C4",  # comprehensions
  "DTZ", # datetime
  "PIE", # misc lints
  "RET", # return
  "SIM", # simplify
  "ARG", # unused arguments
  "PTH", # use pathlib
  "PL",  # pylint
  "RUF", # ruff-specific
]
ignore = [
  "ANN101", # Missing type annotation for self
  "ANN102", # Missing type annotation for cls
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
  "ANN",     # Don't require type annotations in tests
  "PLR2004", # Magic value comparisons OK in tests
  "S101",    # Assert use is OK in tests
]

# MyPy configuration - type checking
[tool.mypy]
strict = true
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "icalendar.*"
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
  "--cov=calendar_splitter",
  "--cov-report=html",
  "--cov-report=term",
  "--cov-report=term-missing",
  "--cov-fail-under=80",
  "-v",
  "--strict-markers",
]
markers = [
  "unit: Unit tests (fast, no external dependencies)",
  "integration: Integration tests (slower, multiple components)",
  "slow: Slow tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["calendar_splitter"]
omit = ["tests/*", "**/__init__.py"]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "if TYPE_CHECKING:",
  "raise AssertionError",
  "raise NotImplementedError",
  "if __name__ == .__main__.:",
  "@abstractmethod",
]
